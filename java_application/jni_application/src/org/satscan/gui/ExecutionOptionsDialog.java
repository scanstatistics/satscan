/*
 * ExecutionOptionsDialog.java
 *
 * Created on December 12, 2007, 9:02 AM
 */
package org.satscan.gui;

import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.undo.UndoManager;
import org.satscan.app.Parameters;
import org.satscan.gui.utils.Utils;

/**
 *
 * @author  Hostovic
 */
public class ExecutionOptionsDialog extends javax.swing.JDialog {

    private final UndoManager undo = new UndoManager();
    private final Parameters _parameters;

    /** Creates new form ExecutionOptionsDialog */
    public ExecutionOptionsDialog(java.awt.Frame parent, Parameters parameters) {
        super(parent, true);
        initComponents();
        _randomizationSeedLabel.setVisible(false);
        _randomizationSeed.setVisible(false);
        _allProcessorsRadioButton.setText(_allProcessorsRadioButton.getText() + " (" + Runtime.getRuntime().availableProcessors() + ")");
        _parameters = parameters;
        if (_parameters.GetNumRequestedParallelProcesses() != 0) {
            _atMostProcessesTextField.setText(Integer.toString(_parameters.GetNumRequestedParallelProcesses()));
            _atMostProcessesRadioButton.setSelected(true);
        } else {
            _allProcessorsRadioButton.setSelected(true);
        }
        _logRunHistoryCheckBox.setSelected(_parameters.GetIsLoggingHistory());
        _suppressWarningsCheckBox.setSelected(_parameters.GetSuppressingWarnings());
        _randomizationSeed.setText(Integer.toString(_parameters.GetRandomizationSeed()));
        setLocationRelativeTo(parent);
    }

    /** Sets parameters from interface control settings */
    private void setParameters() {
        if (_atMostProcessesTextField.getText().length() == 0 || Integer.parseInt(_atMostProcessesTextField.getText()) == 0) {
            _atMostProcessesTextField.setText("1");
        }

        if (_allProcessorsRadioButton.isSelected()) {
            _parameters.SetNumParallelProcessesToExecute(0);
        } else {
            _parameters.SetNumParallelProcessesToExecute(Integer.parseInt(_atMostProcessesTextField.getText()));
        }
        _parameters.SetIsLoggingHistory(_logRunHistoryCheckBox.isSelected());
        _parameters.SetSuppressingWarnings(_suppressWarningsCheckBox.isSelected());
        _parameters.SetRandomizationSeed(Integer.parseInt(_randomizationSeed.getText()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parallelProcessorsButtonGroup = new javax.swing.ButtonGroup();
        parallelProcessorsGroup = new javax.swing.JPanel();
        _allProcessorsRadioButton = new javax.swing.JRadioButton();
        _atMostProcessesRadioButton = new javax.swing.JRadioButton();
        _atMostProcessesTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        _logRunHistoryCheckBox = new javax.swing.JCheckBox();
        _suppressWarningsCheckBox = new javax.swing.JCheckBox();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        _randomizationSeedLabel = new javax.swing.JLabel();
        _randomizationSeed = new javax.swing.JTextField();

        parallelProcessorsButtonGroup.add(_allProcessorsRadioButton);
        parallelProcessorsButtonGroup.add(_atMostProcessesRadioButton);

        setTitle("Session Execution Options");
        setModal(true);

        parallelProcessorsGroup.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parallel Proccessors"));

        _allProcessorsRadioButton.setSelected(true);
        _allProcessorsRadioButton.setText("All available processors");
        _allProcessorsRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        _allProcessorsRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        _atMostProcessesRadioButton.setText("At most");
        _atMostProcessesRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        _atMostProcessesRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        _atMostProcessesTextField.setText("1");
        _atMostProcessesTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                Utils.validatePostiveNumericKeyTyped(_atMostProcessesTextField, e, 3);
            }
        });
        _atMostProcessesTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent e) {
                _atMostProcessesRadioButton.setSelected(true);
            }
            public void focusLost(java.awt.event.FocusEvent e) {
                while (_atMostProcessesTextField.getText().length() == 0 ||
                    Integer.parseInt(_atMostProcessesTextField.getText()) == 0) {
                    if (undo.canUndo()) undo.undo(); else _atMostProcessesTextField.setText("1");
                }
            }
        });
        _atMostProcessesTextField.getDocument().addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent evt) {
                undo.addEdit(evt.getEdit());
            }
        });

        jLabel1.setText("processors");

        javax.swing.GroupLayout parallelProcessorsGroupLayout = new javax.swing.GroupLayout(parallelProcessorsGroup);
        parallelProcessorsGroup.setLayout(parallelProcessorsGroupLayout);
        parallelProcessorsGroupLayout.setHorizontalGroup(
            parallelProcessorsGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parallelProcessorsGroupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parallelProcessorsGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_allProcessorsRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(parallelProcessorsGroupLayout.createSequentialGroup()
                        .addComponent(_atMostProcessesRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_atMostProcessesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        parallelProcessorsGroupLayout.setVerticalGroup(
            parallelProcessorsGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parallelProcessorsGroupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_allProcessorsRadioButton)
                .addGap(10, 10, 10)
                .addGroup(parallelProcessorsGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_atMostProcessesRadioButton)
                    .addComponent(_atMostProcessesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        _atMostProcessesTextField.getAccessibleContext().setAccessibleName("at most processors");

        _logRunHistoryCheckBox.setText("Log analysis to history file");
        _logRunHistoryCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        _logRunHistoryCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        _suppressWarningsCheckBox.setText("Do not report warning messages");
        _suppressWarningsCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        _suppressWarningsCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                setVisible(false);
            }
        });

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                setParameters();
                setVisible(false);
            }
        });

        _randomizationSeedLabel.setLabelFor(_randomizationSeed);
        _randomizationSeedLabel.setText("Randomization Seed");

        _randomizationSeed.setText("12345678");
        _randomizationSeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                Utils.validatePostiveNumericKeyTyped(_atMostProcessesTextField, e, 8);
            }
        });
        _randomizationSeed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent e) {
                while (_randomizationSeed.getText().length() == 0 ||
                    Integer.parseInt(_randomizationSeed.getText()) == 0) {
                    if (undo.canUndo()) undo.undo(); else _randomizationSeed.setText("12345678");
                }
            }
        });
        _randomizationSeed.getDocument().addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent evt) {
                undo.addEdit(evt.getEdit());
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_logRunHistoryCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(parallelProcessorsGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(_randomizationSeedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_randomizationSeed, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                    .addComponent(_suppressWarningsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parallelProcessorsGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_logRunHistoryCheckBox)
                .addGap(10, 10, 10)
                .addComponent(_suppressWarningsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_randomizationSeedLabel)
                    .addComponent(_randomizationSeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton _allProcessorsRadioButton;
    private javax.swing.JRadioButton _atMostProcessesRadioButton;
    private javax.swing.JTextField _atMostProcessesTextField;
    private javax.swing.JCheckBox _logRunHistoryCheckBox;
    private javax.swing.JTextField _randomizationSeed;
    private javax.swing.JLabel _randomizationSeedLabel;
    private javax.swing.JCheckBox _suppressWarningsCheckBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton okButton;
    private javax.swing.ButtonGroup parallelProcessorsButtonGroup;
    private javax.swing.JPanel parallelProcessorsGroup;
    // End of variables declaration//GEN-END:variables
}
