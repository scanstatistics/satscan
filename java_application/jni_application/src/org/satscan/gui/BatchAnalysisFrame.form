<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JInternalFrameFormInfo">
  <Properties>
    <Property name="closable" type="boolean" value="true"/>
    <Property name="defaultCloseOperation" type="int" value="0"/>
    <Property name="resizable" type="boolean" value="true"/>
    <Property name="title" type="java.lang.String" value="Multiple Analyses"/>
    <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[900, 400]"/>
    </Property>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="_actionitems_panel" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="_actionitems_panel" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="_actionitems_panel">

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="_actions_panel" min="-2" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="_analysesScrollpane" pref="787" max="32767" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="1" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="1" attributes="0">
                      <Component id="_analysesScrollpane" alignment="0" pref="348" max="32767" attributes="0"/>
                      <Component id="_actions_panel" alignment="0" max="32767" attributes="0"/>
                  </Group>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Container class="javax.swing.JPanel" name="_actions_panel">
          <Properties>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.EtchedBorderInfo">
                <EtchetBorder/>
              </Border>
            </Property>
          </Properties>

          <Layout>
            <DimensionLayout dim="0">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" attributes="0">
                      <EmptySpace max="-2" attributes="0"/>
                      <Group type="103" groupAlignment="0" attributes="0">
                          <Component id="_modify_analysis" alignment="1" max="32767" attributes="0"/>
                          <Component id="_add_analysis" alignment="0" max="32767" attributes="0"/>
                          <Component id="_remove_analysis" alignment="1" max="32767" attributes="0"/>
                          <Component id="_execute_selected" alignment="1" max="32767" attributes="0"/>
                          <Component id="_duplicate_analysis" alignment="0" max="32767" attributes="0"/>
                          <Component id="jSeparator2" alignment="0" max="32767" attributes="0"/>
                          <Component id="_execute_progress" alignment="0" max="32767" attributes="0"/>
                          <Component id="jSeparator3" alignment="0" max="32767" attributes="0"/>
                          <Group type="102" alignment="0" attributes="0">
                              <Component id="_moveUp" min="-2" pref="68" max="-2" attributes="0"/>
                              <EmptySpace type="unrelated" max="32767" attributes="0"/>
                              <Component id="_moveDown" min="-2" pref="68" max="-2" attributes="0"/>
                          </Group>
                          <Component id="_refresh_results" alignment="0" max="32767" attributes="0"/>
                      </Group>
                      <EmptySpace max="-2" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
            <DimensionLayout dim="1">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" alignment="0" attributes="0">
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="_add_analysis" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="_modify_analysis" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="_duplicate_analysis" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="jSeparator3" min="-2" pref="5" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Group type="103" groupAlignment="0" attributes="0">
                          <Component id="_moveUp" alignment="0" min="-2" max="-2" attributes="0"/>
                          <Component id="_moveDown" alignment="0" min="-2" max="-2" attributes="0"/>
                      </Group>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="jSeparator2" min="-2" pref="5" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="_remove_analysis" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="_refresh_results" min="-2" max="-2" attributes="0"/>
                      <EmptySpace pref="97" max="32767" attributes="0"/>
                      <Component id="_execute_progress" min="-2" pref="23" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="_execute_selected" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
          </Layout>
          <SubComponents>
            <Component class="javax.swing.JButton" name="_add_analysis">
              <Properties>
                <Property name="text" type="java.lang.String" value="New Settings"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_add_analysis.addActionListener(new java.awt.event.ActionListener() {&#xd;&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xd;&#xa;        WaitCursor waitCursor = new WaitCursor(BatchAnalysisFrame.this);&#xd;&#xa;        // Create new BatchAnalysis object and add to collection.&#xd;&#xa;        BatchAnalysis newAnalysis = new BatchAnalysis();&#xd;&#xa;        newAnalysis.setSelected(true);&#xd;&#xa;        _batch_analyses.add(newAnalysis);&#xd;&#xa;        // Add record to table.&#xd;&#xa;        DefaultTableModel model = (DefaultTableModel) _analyses_table.getModel();&#xd;&#xa;        model.addRow(getRowForBatchAnalysis(newAnalysis));&#xd;&#xa;        // Remove selection from any other records in table - to focus on new record.&#xd;&#xa;        removeSelection(newAnalysis);&#xd;&#xa;        // Show settngs window for new reocrd.&#xd;&#xa;        try {&#xd;&#xa;            ParameterSettingsFrame frame = new ParameterSettingsFrame(SaTScanApplication.getInstance().getRootPane(), BatchAnalysisFrame.this, newAnalysis.getParameters());&#xd;&#xa;            frame.setTitle(newAnalysis.getDescription());&#xd;&#xa;            frame.setIconifiable(false);&#xd;&#xa;            frame.addInternalFrameListener(BatchAnalysisFrame.this);&#xd;&#xa;            frame.setVisible(true);&#xd;&#xa;            SaTScanApplication.getInstance().AddFrame(frame);&#xd;&#xa;            frame.addInternalFrameListener(SaTScanApplication.getInstance());&#xd;&#xa;            _open_settings_frames.put(newAnalysis, frame);&#xd;&#xa;            frame.setSelected(true);&#xd;&#xa;        } catch (Throwable t) {&#xd;&#xa;            new ExceptionDialog(SaTScanApplication.getInstance(), t).setVisible(true);&#xd;&#xa;        } finally {&#xd;&#xa;            waitCursor.restore();&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;});&#xd;&#xa;"/>
              </AuxValues>
            </Component>
            <Component class="javax.swing.JButton" name="_remove_analysis">
              <Properties>
                <Property name="text" type="java.lang.String" value="Remove Selected"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_remove_analysis.addActionListener(new java.awt.event.ActionListener() {&#xd;&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xd;&#xa;        DefaultTableModel model = (DefaultTableModel) _analyses_table.getModel();&#xd;&#xa;        ArrayList&lt;ImmutablePair&lt;BatchAnalysis, Integer&gt;&gt; selectedAnalyses = getSelectedAnalysis();&#xd;&#xa;        if (JOptionPane.showInternalConfirmDialog(&#xd;&#xa;            BatchAnalysisFrame.this, &#xd;&#xa;            &quot;Remove &quot; + selectedAnalyses.size() + &quot; selected analy&quot; + (selectedAnalyses.size() == 1 ? &quot;sis&quot; : &quot;ses&quot;) + &quot;?&quot;, &quot;Remove?&quot;, &#xd;&#xa;            JOptionPane.OK_CANCEL_OPTION&#xd;&#xa;        ) == JOptionPane.OK_OPTION) {&#xd;&#xa;            Collections.sort(selectedAnalyses, Comparator.comparing(p -&gt; -p.getRight()));&#xd;&#xa;            for (ImmutablePair&lt;BatchAnalysis, Integer&gt; selectedAnalysis : selectedAnalyses) {&#xd;&#xa;                ParameterSettingsFrame settings_frame = _open_settings_frames.get(selectedAnalysis.left);&#xd;&#xa;                if (settings_frame != null) {                &#xd;&#xa;                    // There is an open settings window for it - bring to focus verses removing.&#xd;&#xa;                    settings_frame.toFront();&#xd;&#xa;                    return;&#xd;&#xa;                } else {&#xd;&#xa;                    model.removeRow(selectedAnalysis.right);&#xd;&#xa;                    _batch_analyses.remove(selectedAnalysis.left);&#xd;&#xa;                }&#xd;&#xa;            }&#xd;&#xa;            writeBatchAnalysesFromFile();&#xd;&#xa;            enableButtons();&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;});&#xd;&#xa;"/>
              </AuxValues>
            </Component>
            <Component class="javax.swing.JButton" name="_modify_analysis">
              <Properties>
                <Property name="text" type="java.lang.String" value="Modify Selected"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_modify_analysis.addActionListener(new java.awt.event.ActionListener() {&#xd;&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xd;&#xa;        WaitCursor waitCursor = new WaitCursor(BatchAnalysisFrame.this);&#xd;&#xa;        try {&#xd;&#xa;            ImmutablePair&lt;BatchAnalysis, Integer&gt; selected = getSelectedAnalysis().get(0);&#xd;&#xa;            ParameterSettingsFrame settings_frame = _open_settings_frames.get(selected.left);&#xd;&#xa;            if (settings_frame != null) {&#xd;&#xa;                settings_frame.toFront();&#xd;&#xa;                return;&#xd;&#xa;            }&#xd;&#xa;            ParameterSettingsFrame parameters_frame = new ParameterSettingsFrame(SaTScanApplication.getInstance().getRootPane(), BatchAnalysisFrame.this, selected.left.getParameters());&#xd;&#xa;            parameters_frame.setIconifiable(false);&#xd;&#xa;            parameters_frame.addInternalFrameListener(BatchAnalysisFrame.this);&#xd;&#xa;            parameters_frame.setVisible(true);&#xd;&#xa;            SaTScanApplication.getInstance().AddFrame(parameters_frame);&#xd;&#xa;            parameters_frame.addInternalFrameListener(SaTScanApplication.getInstance());&#xd;&#xa;            _open_settings_frames.put(selected.left, parameters_frame);&#xd;&#xa;            parameters_frame.setSelected(true);&#xd;&#xa;            enableButtons();&#xd;&#xa;        } catch (Throwable t) {&#xd;&#xa;            new ExceptionDialog(SaTScanApplication.getInstance(), t).setVisible(true);&#xd;&#xa;        } finally {&#xd;&#xa;            waitCursor.restore();&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;});&#xd;&#xa;"/>
              </AuxValues>
            </Component>
            <Component class="javax.swing.JButton" name="_execute_selected">
              <Properties>
                <Property name="text" type="java.lang.String" value="Execute Selected"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_execute_selected.addActionListener(new java.awt.event.ActionListener() {&#xd;&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xd;&#xa;        _execute_progress.setValue(0);&#xd;&#xa;        _execute_progress.setString(&quot;&quot;);&#xd;&#xa;        _execute_progress.setVisible(true);&#xd;&#xa;        ExecuteAnalysisTask task = new ExecuteAnalysisTask();&#xd;&#xa;        task.addPropertyChangeListener(new PropertyChangeListener() {&#xd;&#xa;                public  void propertyChange(PropertyChangeEvent evt) {&#xd;&#xa;                    if (&quot;progress&quot;.equals(evt.getPropertyName())) {&#xd;&#xa;                        _execute_progress.setValue((Integer)evt.getNewValue());&#xd;&#xa;                    }&#xd;&#xa;                }&#xd;&#xa;        });&#xd;&#xa;        task.execute();&#xd;&#xa;    }&#xd;&#xa;});"/>
              </AuxValues>
            </Component>
            <Component class="javax.swing.JButton" name="_duplicate_analysis">
              <Properties>
                <Property name="text" type="java.lang.String" value="Create Duplicate"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_duplicate_analysis.addActionListener(new java.awt.event.ActionListener() {&#xd;&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xd;&#xa;        WaitCursor waitCursor = new WaitCursor(BatchAnalysisFrame.this);&#xd;&#xa;        try {&#xd;&#xa;            ImmutablePair&lt;BatchAnalysis, Integer&gt; selected = getSelectedAnalysis().get(0);&#xd;&#xa;            BatchAnalysis duplicated = (BatchAnalysis)selected.left.clone();&#xd;&#xa;            duplicated.setDescription(&quot;Copy - &quot; + duplicated.getDescription());&#xd;&#xa;            duplicated.setLastExecutedDate(null);&#xd;&#xa;            duplicated.setLastExecutedStatus(BatchAnalysis.STATUS.NEVER);&#xd;&#xa;            duplicated.setDrilldownRoot(null);&#xd;&#xa;            duplicated.setSelected(true);&#xd;&#xa;            _batch_analyses.add(selected.right + 1, duplicated);&#xd;&#xa;            // Add record to table.&#xd;&#xa;            DefaultTableModel model = (DefaultTableModel) _analyses_table.getModel();&#xd;&#xa;            model.insertRow(selected.right + 1, getRowForBatchAnalysis(duplicated));&#xd;&#xa;            // Remove selection from any other records in table - to focus on new record.&#xd;&#xa;            removeSelection(duplicated);&#xd;&#xa;            // Show settngs window for new reocrd.&#xd;&#xa;            ParameterSettingsFrame frame = new ParameterSettingsFrame(SaTScanApplication.getInstance().getRootPane(), BatchAnalysisFrame.this, duplicated.getParameters());&#xd;&#xa;            frame.setTitle(duplicated.getDescription());&#xd;&#xa;            frame.setIconifiable(false);&#xd;&#xa;            frame.addInternalFrameListener(BatchAnalysisFrame.this);&#xd;&#xa;            frame.setVisible(true);&#xd;&#xa;            SaTScanApplication.getInstance().AddFrame(frame);&#xd;&#xa;            frame.addInternalFrameListener(SaTScanApplication.getInstance());&#xd;&#xa;            _open_settings_frames.put(duplicated, frame);&#xd;&#xa;            frame.setSelected(true);&#xd;&#xa;            _duplicate_analysis.requestFocusInWindow();&#xd;&#xa;        } catch (Throwable t) {&#xd;&#xa;            new ExceptionDialog(SaTScanApplication.getInstance(), t).setVisible(true);&#xd;&#xa;        } finally {&#xd;&#xa;            waitCursor.restore();&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;});&#xd;&#xa;"/>
              </AuxValues>
            </Component>
            <Component class="javax.swing.JSeparator" name="jSeparator2">
            </Component>
            <Component class="javax.swing.JProgressBar" name="_execute_progress">
              <Properties>
                <Property name="stringPainted" type="boolean" value="true"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_execute_progress.setVisible(false);&#xd;&#xa;"/>
              </AuxValues>
            </Component>
            <Component class="javax.swing.JSeparator" name="jSeparator3">
            </Component>
            <Component class="javax.swing.JButton" name="_moveUp">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/arrow-up.png"/>
                </Property>
                <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[49, 23]"/>
                </Property>
                <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[49, 23]"/>
                </Property>
                <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[49, 23]"/>
                </Property>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="_moveUpActionPerformed"/>
              </Events>
            </Component>
            <Component class="javax.swing.JButton" name="_moveDown">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/arrow-down.png"/>
                </Property>
                <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[49, 23]"/>
                </Property>
                <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[49, 23]"/>
                </Property>
                <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[49, 23]"/>
                </Property>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="_moveDownActionPerformed"/>
              </Events>
            </Component>
            <Component class="javax.swing.JButton" name="_refresh_results">
              <Properties>
                <Property name="text" type="java.lang.String" value="Refresh Results"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="_refresh_resultsActionPerformed"/>
              </Events>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="_analysesScrollpane">
          <AuxValues>
            <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
          </AuxValues>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTable" name="_analyses_table">
              <Properties>
                <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="new javax.swing.table.DefaultTableModel(&#xa;    new Object [][] {},&#xa;    new String [] { &quot;&quot;, &quot;Description&quot;, &quot;Analysis&quot;, &quot;Model&quot;, &quot;Study Length&quot;, &quot;Lag&quot;, &quot;Status&quot; }){&#xa;    Class[] types = new Class [] {&#xa;        java.lang.Boolean.class, String.class, String.class, String.class, BatchAnalysis.StudyPeriodOffset.class, BatchAnalysis.StudyPeriodOffset.class, BatchAnalysis.class&#xa;    };&#xa;    boolean[] canEdit = new boolean [] { true, true, false, false, true, true, false };&#xa;    public Class getColumnClass(int columnIndex) {&#xa;        return types [columnIndex];&#xa;    }&#xa;    public boolean isCellEditable(int rowIndex, int columnIndex) {&#xa;        return !_batch_executing &amp;&amp; canEdit[columnIndex];&#xa;    }&#xa;}" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_analyses_table.getTableHeader().setOpaque(false);&#xd;&#xa;// Set custom header renderer for the row selection header.&#xd;&#xa;TableColumn column = _analyses_table.getColumnModel().getColumn(SELECT_IDX);&#xd;&#xa;column.setHeaderRenderer(new CheckBoxHeaderRenderer());&#xd;&#xa;column.setHeaderValue(Boolean.FALSE);&#xd;&#xa;// Add listeners for user selection on table header and rows.&#xd;&#xa;CheckBoxHeaderHandler handler = new CheckBoxHeaderHandler(_analyses_table, SELECT_IDX);&#xd;&#xa;_analyses_table.getModel().addTableModelListener(handler);&#xd;&#xa;_analyses_table.getTableHeader().addMouseListener(handler);&#xd;&#xa;&#xd;&#xa;_analyses_table.setRowHeight(35);&#xd;&#xa;_analyses_table.setIntercellSpacing(new Dimension(10,1));&#xd;&#xa;_analyses_table.setDefaultRenderer(Parameters.class, new ParametersRenderer());&#xd;&#xa;_analyses_table.setDefaultRenderer(BatchAnalysis.StudyPeriodOffset.class, new StudyPeriodOffsetRenderer());&#xd;&#xa;_analyses_table.setDefaultRenderer(BatchAnalysis.class, new BatchStatusRenderer());&#xd;&#xa;_analyses_table.setDefaultEditor(BatchAnalysis.StudyPeriodOffset.class, new StudyPeriodOffsetEditor());&#xd;&#xa;_analyses_table.setDefaultEditor(String.class, new StringEditor());&#xd;&#xa;((DefaultCellEditor)_analyses_table.getDefaultEditor(BatchAnalysis.StudyPeriodOffset.class)).setClickCountToStart(1);&#xd;&#xa;((DefaultCellEditor)_analyses_table.getDefaultEditor(String.class)).setClickCountToStart(1);&#xd;&#xa;_analyses_table.setRowSelectionAllowed(false);&#xd;&#xa;_analyses_table.getTableHeader().setReorderingAllowed(false);&#xd;&#xa;setJTableColumnsWidth(_analyses_table, _analyses_table.getPreferredSize().width, 1, 30, 16, 8, 10, 6, 29);&#xd;&#xa;_analyses_table.getModel().addTableModelListener(new TableModelListener() {&#xd;&#xa;    @Override&#xd;&#xa;    public void tableChanged(TableModelEvent e) {&#xd;&#xa;        enableButtons();&#xd;&#xa;        if (_table_initiallized) {&#xd;&#xa;            int row = e.getFirstRow();&#xd;&#xa;            int column = e.getColumn();&#xd;&#xa;            if (column == SELECT_IDX) {&#xd;&#xa;                DefaultTableModel model = (DefaultTableModel)e.getSource();&#xd;&#xa;                _batch_analyses.get(row).setSelected((boolean)model.getValueAt(row, column));&#xd;&#xa;                writeBatchAnalysesFromFile();&#xd;&#xa;            } else if (column == DESCRIPTION_IDX) {&#xd;&#xa;                DefaultTableModel model = (DefaultTableModel)e.getSource();&#xd;&#xa;                _batch_analyses.get(row).setDescription((String)model.getValueAt(row, column));&#xd;&#xa;                writeBatchAnalysesFromFile();&#xd;&#xa;            }&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;});&#xd;&#xa;"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
