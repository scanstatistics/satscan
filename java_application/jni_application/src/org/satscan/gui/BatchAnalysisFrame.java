/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.satscan.gui;

import java.awt.event.MouseEvent;
import java.util.LinkedHashMap;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JRootPane;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import org.satscan.app.Parameters;
import org.satscan.gui.utils.WaitCursor;

/**
 *
 * @author hostovic
 */
public class BatchAnalysisFrame extends javax.swing.JInternalFrame implements InternalFrameListener {
    private final JRootPane _rootPane;
    private javax.swing.JPanel jPanelNew = null;
    private javax.swing.GroupLayout jpanelLayoutNew = null;
    private LinkedHashMap<AnalysisPanel, Parameters> _panel_analysis = new LinkedHashMap<AnalysisPanel, Parameters>();
    
    /**
     * Creates new form AnalysisBatchFrame
     */
    public BatchAnalysisFrame(final JRootPane rootPane) {
        initComponents();
        setFrameIcon(new ImageIcon(getClass().getResource("/SaTScan.png")));
        _rootPane = rootPane;
        addInternalFrameListener(this);
        pack();
        _remove_analysis.setEnabled(getSelectedAnalysis() != null);
    }

    /* Returns the selected AnalysisPanel or null. */
    private AnalysisPanel getSelectedAnalysis() {
        AnalysisPanel selectedPanel = null;
        for (java.awt.Component component : _analyses_panel.getComponents()) {
            if (component instanceof AnalysisPanel && ((AnalysisPanel)component).isSelected) {
                selectedPanel = ((AnalysisPanel)component);
               break;
            }
        }
        return selectedPanel;
    }
    
    /* Ensures that none of the AnalysisPanel are selected. */
    private void removeSelection(AnalysisPanel exclude) {
        for (java.awt.Component component : _analyses_panel.getComponents()) {
            if (component instanceof AnalysisPanel && ((AnalysisPanel)component).isSelected && ((AnalysisPanel)component) != exclude) {
                ((AnalysisPanel)component).toggleSelected();
            }
        }        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _actions_panel = new javax.swing.JPanel();
        _add_analysis = new javax.swing.JButton();
        _remove_analysis = new javax.swing.JButton();
        _modify_analysis = new javax.swing.JButton();
        _actionitems_panel = new javax.swing.JPanel();
        _analyses_scrollpane = new javax.swing.JScrollPane();
        _analyses_panel = new javax.swing.JPanel();
        _empty_panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setResizable(true);
        setTitle("Batch Analyses");
        setPreferredSize(new java.awt.Dimension(700, 400));

        _actions_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        _add_analysis.setText("New");
        _add_analysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                AnalysisPanel jPanelNew = new AnalysisPanel();

                //jPanelNew.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                //jPanelNew.setMaximumSize(new java.awt.Dimension(32767, 75));
                //jPanelNew.setPreferredSize(new java.awt.Dimension(50, 75));

                jpanelLayoutNew = new javax.swing.GroupLayout(jPanelNew);
                jPanelNew.setLayout(jpanelLayoutNew);
                jpanelLayoutNew.setHorizontalGroup(
                    jpanelLayoutNew.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGap(0, 612, Short.MAX_VALUE)
                );
                jpanelLayoutNew.setVerticalGroup(
                    jpanelLayoutNew.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGap(0, 96, Short.MAX_VALUE)
                );

                _analyses_panel.remove(_empty_panel);
                _analyses_panel.add(jPanelNew);
                jPanelNew.setSelected(true);
                BatchAnalysisFrame.this.removeSelection(jPanelNew);
                validate();

                WaitCursor waitCursor = new WaitCursor(BatchAnalysisFrame.this);

                try {
                    Parameters parameters = new Parameters();
                    _panel_analysis.put(jPanelNew, parameters);
                    ParameterSettingsFrame _test_frame = new ParameterSettingsFrame(BatchAnalysisFrame.this._rootPane, BatchAnalysisFrame.this, parameters);
                    _test_frame.setIconifiable(false);
                    _test_frame.addInternalFrameListener(BatchAnalysisFrame.this);
                    _test_frame.setVisible(true);
                    SaTScanApplication.getInstance().AddFrame(_test_frame);
                    _test_frame.setSelected(true);
                } catch (Throwable t) {
                    new ExceptionDialog(SaTScanApplication.getInstance(), t).setVisible(true);
                } finally {
                    waitCursor.restore();
                }

            }
        });

        _remove_analysis.setText("Remove");
        _remove_analysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                for (java.awt.Component component : _analyses_panel.getComponents()) {
                    if (((AnalysisPanel)component).isSelected) {
                        _analyses_panel.remove(component);
                        break;
                    }
                }
                if (_analyses_panel.getComponentCount() == 0) {
                    _analyses_panel.add(_empty_panel);
                    _remove_analysis.setEnabled(false);
                }
                revalidate();
                repaint();
            }
        });

        _modify_analysis.setText("Modify");
        _modify_analysis.setEnabled(false);
        _modify_analysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                WaitCursor waitCursor = new WaitCursor(BatchAnalysisFrame.this);
                AnalysisPanel jPanel = getSelectedAnalysis();
                try {
                    ParameterSettingsFrame parameters_frame = new ParameterSettingsFrame(BatchAnalysisFrame.this._rootPane, BatchAnalysisFrame.this, _panel_analysis.get(jPanel));
                    parameters_frame.setIconifiable(false);
                    parameters_frame.addInternalFrameListener(BatchAnalysisFrame.this);
                    parameters_frame.setVisible(true);
                    SaTScanApplication.getInstance().AddFrame(parameters_frame);
                    parameters_frame.setSelected(true);
                } catch (Throwable t) {
                    new ExceptionDialog(SaTScanApplication.getInstance(), t).setVisible(true);
                } finally {
                    waitCursor.restore();
                }

            }
        });

        javax.swing.GroupLayout _actions_panelLayout = new javax.swing.GroupLayout(_actions_panel);
        _actions_panel.setLayout(_actions_panelLayout);
        _actions_panelLayout.setHorizontalGroup(
            _actions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_actions_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_actions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_modify_analysis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _actions_panelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(_actions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_add_analysis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_remove_analysis, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        _actions_panelLayout.setVerticalGroup(
            _actions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_actions_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_add_analysis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_modify_analysis)
                .addGap(18, 18, 18)
                .addComponent(_remove_analysis)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        _analyses_scrollpane.setBorder(null);
        _analyses_scrollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        _analyses_panel.setLayout(new javax.swing.BoxLayout(_analyses_panel, javax.swing.BoxLayout.Y_AXIS));

        _empty_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        _empty_panel.setMaximumSize(new java.awt.Dimension(32767, 100));
        _empty_panel.setPreferredSize(new java.awt.Dimension(32767, 200));

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextPane1.setEditable(false);
        jTextPane1.setBackground(new java.awt.Color(240, 240, 240));
        jTextPane1.setContentType("text/html"); // NOI18N
        jTextPane1.setText("<html>\r\n  <head>\r\n\r\n  </head>\r\n  <body>\r\n    <p style=\"margin: 0 0 0 0;font-style:italic;font-size:1.01em;font-weight:normal;\">\rspace-time Poisson, 50% maximum temporal, 25% maximum spatial</p>\n  </body>\r\n</html>\r\n");
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout _empty_panelLayout = new javax.swing.GroupLayout(_empty_panel);
        _empty_panel.setLayout(_empty_panelLayout);
        _empty_panelLayout.setHorizontalGroup(
            _empty_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_empty_panelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 32213, Short.MAX_VALUE))
        );
        _empty_panelLayout.setVerticalGroup(
            _empty_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
        );

        _analyses_panel.add(_empty_panel);

        _analyses_scrollpane.setViewportView(_analyses_panel);

        javax.swing.GroupLayout _actionitems_panelLayout = new javax.swing.GroupLayout(_actionitems_panel);
        _actionitems_panel.setLayout(_actionitems_panelLayout);
        _actionitems_panelLayout.setHorizontalGroup(
            _actionitems_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _actionitems_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_analyses_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        _actionitems_panelLayout.setVerticalGroup(
            _actionitems_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_actionitems_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_analyses_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(_actionitems_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_actions_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(_actions_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(_actionitems_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        JInternalFrame this_frame = e.getInternalFrame();
        if (this_frame instanceof ParameterSettingsFrame) {
            Parameters parameters = ((ParameterSettingsFrame)this_frame).getParameterSettings();
            String writetest = parameters.WriteToStringStream();
        }
    }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    class AnalysisPanel extends javax.swing.JPanel {
        boolean isSelected=false;
        //javax.swing.BorderFactory.createEtchedBorder()
        javax.swing.border.Border defaultBorder = javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.BevelBorder.LOWERED);
        javax.swing.border.Border selectedBorder = javax.swing.BorderFactory.createEtchedBorder(
            javax.swing.border.BevelBorder.LOWERED, java.awt.Color.ORANGE, ((javax.swing.border.EtchedBorder)defaultBorder).getShadowColor()
        );
        
        AnalysisPanel() {
            setBorder(defaultBorder);
            setFocusable(true);
            addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent e) {
                    removeSelection(AnalysisPanel.this);
                    toggleSelected();
                    _remove_analysis.setEnabled(isSelected);
                    _modify_analysis.setEnabled(isSelected);
                    repaint();
                }
            });            
        }

        @Override
        public java.awt.Dimension getMaximumSize() {
            return new java.awt.Dimension(32767, 75);
        };
        
        @Override
        public java.awt.Dimension getPreferredSize() {
            return new java.awt.Dimension(50, 75);
        }

        public void toggleSelected() {
            setSelected(!isSelected);
        }        
        
        public void setSelected(boolean selected) {
            isSelected = selected;
            setBorder(isSelected ? selectedBorder : defaultBorder);
        }
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel _actionitems_panel;
    private javax.swing.JPanel _actions_panel;
    private javax.swing.JButton _add_analysis;
    private javax.swing.JPanel _analyses_panel;
    private javax.swing.JScrollPane _analyses_scrollpane;
    private javax.swing.JPanel _empty_panel;
    private javax.swing.JButton _modify_analysis;
    private javax.swing.JButton _remove_analysis;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
