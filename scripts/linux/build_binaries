#!/bin/sh

### # Check for minimum number of arguments.
### REQUIRED_ARGS=1 # Script requires 3 argument
### if [ $# -lt "$REQUIRED_ARGS" ]
### then
###   echo "Usage: `basename $0` <satscan_src directory> <boost directory> <binaries ouitput directory>])"
###   echo "   example: `basename $0` /prj/satscan/build.area/satscan /prj/satscan/build.area/boost/boost_1_81_0 /prj/satscan/build.area/binaries/linux"
###   exit 1
### fi

(

cpp_compiler="/usr/bin/g++"
c_compiler="/usr/bin/gcc"
binaries="${3:-/prj/satscan/build.area/binaries/linux}"
satscan_src="${1:-/prj/satscan/build.area/satscan}"
boost_src="${2:-/prj/satscan/build.area/boost/boost_1_81_0}"
processors="-j8"
pthread="-pthread"
lib_target="libsatscan.linux.so"

rm -f $binaries/*

echo building SaTScan for 32-bit system using gcc
./makescript.sh $binaries/satscan32 $satscan_src $boost_src -m32 "-O3 -Wall -Wextra" $cpp_compiler $c_compiler $processors $pthread

echo building SaTScan shared object for 32-bit system using gcc
./makescript.so.sh $lib_target $binaries/libsatscan32.so $satscan_src $boost_src -m32 "-O3 -Wall -Wextra" $cpp_compiler $c_compiler $processors $pthread

echo building SaTScan for 64-bit system using gcc
./makescript.sh $binaries/satscan64 $satscan_src $boost_src -m64 "-O3 -Wall -Wextra" $cpp_compiler $c_compiler $processors $pthread

echo building SaTScan shared object for 64-bit system using gcc
./makescript.so.sh $lib_target $binaries/libsatscan64.so $satscan_src $boost_src -m64 "-O3 -Wall -Wextra" $cpp_compiler $c_compiler $processors $pthread

) 1> build.stdout 2> build.stderr